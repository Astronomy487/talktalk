class Talktalk{static translations={};static indicator="#";static langPrefs=["en"];static provide(t){for(let a in t)Talktalk.translations[a]=t[a]}static setupLangPrefs(){try{for(let t of(Talktalk.langPrefs=[],(navigator.languages||[]).concat(navigator.language)))for(t=t.split("-");t.length;){let a=t.join("-");Talktalk.langPrefs.includes(a)||Talktalk.langPrefs.push(a),t.pop()}if(0==Talktalk.langPrefs.length)throw""}catch(l){Talktalk.langPrefs=["en"]}}static readTranslationKey(t){for(let a of Talktalk.langPrefs)if(a in Talktalk.translations[t])return Talktalk.translations[t][a];throw"Could not translate key '"+t+"'"}static handleNumber(t){}static handleDate(){}static handleDuration(){}static say(t,a={}){let l=Talktalk.readTranslationKey(t);for(let e in a){if(!l.includes(Talktalk.indicator+e))throw"Translated text '"+l+"' doesn't have '"+Talktalk.indicator+e+"'";let n=a[e];if("string"==typeof n)n.startsWith(Talktalk.indicator)&&(n=Talktalk.say(n.substring(Talktalk.indicator.length)));else throw"TODO - handle numbers and dates and stuff";l=l.replace(Talktalk.indicator+e,n)}return l}static fillElements(t=document){for(let a of t.querySelectorAll("[data-talktalk]"))try{a.innerText=Talktalk.say(a.getAttribute("data-talktalk")),a.removeAttribute("data-talktalk")}catch(l){}}}Talktalk.setupLangPrefs();